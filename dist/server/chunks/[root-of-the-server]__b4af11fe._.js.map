{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/deshm/Downloads/mgnrega-district-dashboard-main/mgnrega-district-dashboard-main/src/lib/mgnrega-data.ts"],"sourcesContent":["// District data structure for frontend\nexport interface District {\n  id: string;\n  name: {\n    en: string;\n    hi: string;\n  };\n}\n\nexport interface DistrictData {\n  id: string;\n  name: {\n    en: string;\n    hi: string;\n  };\n  metrics: {\n    workCompleted: number;\n    fundsUtilized: number;\n    activeWorkers: number;\n    averageWage: number;\n    workCompletionRate: number;\n    fundUtilizationRate: number;\n    workerParticipation: number;\n  };\n  monthlyData: Array<{\n    month: string;\n    workCompleted: number;\n    fundsUtilized: number;\n    workers: number;\n  }>;\n  categoryData: Array<{\n    name: string;\n    value: number;\n    color: string;\n  }>;\n  targetVsAchievement: {\n    target: number;\n    achievement: number;\n  };\n}\n\n// Maharashtra districts from MGNREGA official data (State Code: 18)\nexport const districts: District[] = [\n  { id: \"1809\", name: { en: \"Ahmednagar\", hi: \"अहमदनगर\" } },\n  { id: \"1823\", name: { en: \"Akola\", hi: \"अकोला\" } },\n  { id: \"1824\", name: { en: \"Amravati\", hi: \"अमरावती\" } },\n  { id: \"1817\", name: { en: \"Beed\", hi: \"बीड\" } },\n  { id: \"1830\", name: { en: \"Bhandara\", hi: \"भंडारा\" } },\n  { id: \"1825\", name: { en: \"Buldhana\", hi: \"बुलढाणा\" } },\n  { id: \"1832\", name: { en: \"Chandrapur\", hi: \"चंद्रपुर\" } },\n  { id: \"1834\", name: { en: \"Dharashiv\", hi: \"धाराशिव\" } },\n  { id: \"1804\", name: { en: \"Dhule\", hi: \"धुळे\" } },\n  { id: \"1833\", name: { en: \"Gadchiroli\", hi: \"गडचिरोली\" } },\n  { id: \"1831\", name: { en: \"Gondia\", hi: \"गोंदिया\" } },\n  { id: \"1818\", name: { en: \"Hingoli\", hi: \"हिंगोली\" } },\n  { id: \"1819\", name: { en: \"Jalgaon\", hi: \"जळगाव\" } },\n  { id: \"1816\", name: { en: \"Jalna\", hi: \"जालना\" } },\n  { id: \"1812\", name: { en: \"Kolhapur\", hi: \"कोल्हापूर\" } },\n  { id: \"1815\", name: { en: \"Latur\", hi: \"लातूर\" } },\n  { id: \"1829\", name: { en: \"Nagpur\", hi: \"नागपूर\" } },\n  { id: \"1820\", name: { en: \"Nanded\", hi: \"नांदेड\" } },\n  { id: \"1803\", name: { en: \"Nandurbar\", hi: \"नंदुरबार\" } },\n  { id: \"1802\", name: { en: \"Nashik\", hi: \"नाशिक\" } },\n  { id: \"1835\", name: { en: \"Palghar\", hi: \"पालघर\" } },\n  { id: \"1821\", name: { en: \"Parbhani\", hi: \"परभणी\" } },\n  { id: \"1807\", name: { en: \"Pune\", hi: \"पुणे\" } },\n  { id: \"1805\", name: { en: \"Raigad\", hi: \"रायगड\" } },\n  { id: \"1810\", name: { en: \"Ratnagiri\", hi: \"रत्नागिरी\" } },\n  { id: \"1813\", name: { en: \"Sangli\", hi: \"सांगली\" } },\n  { id: \"1814\", name: { en: \"Satara\", hi: \"सातारा\" } },\n  { id: \"1811\", name: { en: \"Sindhudurg\", hi: \"सिंधुदुर्ग\" } },\n  { id: \"1808\", name: { en: \"Solapur\", hi: \"सोलापूर\" } },\n  { id: \"1806\", name: { en: \"Thane\", hi: \"ठाणे\" } },\n  { id: \"1828\", name: { en: \"Wardha\", hi: \"वर्धा\" } },\n  { id: \"1826\", name: { en: \"Washim\", hi: \"वाशिम\" } },\n  { id: \"1827\", name: { en: \"Yavatmal\", hi: \"यवतमाळ\" } },\n];\n\n// Generate mock data for districts (fallback when API fails)\nexport function generateMockDistrictData(districtId: string): DistrictData {\n  const district = districts.find(d => d.id === districtId);\n  if (!district) {\n    throw new Error(\"District not found\");\n  }\n\n  const baseMetrics = {\n    workCompleted: Math.floor(Math.random() * 500) + 300,\n    fundsUtilized: Math.floor(Math.random() * 30) + 65,\n    activeWorkers: Math.floor(Math.random() * 5000) + 10000,\n    averageWage: Math.floor(Math.random() * 50) + 250,\n    workCompletionRate: Math.floor(Math.random() * 20) + 75,\n    fundUtilizationRate: Math.floor(Math.random() * 25) + 70,\n    workerParticipation: Math.floor(Math.random() * 15) + 80,\n  };\n\n  const monthlyData = Array.from({ length: 12 }, (_, i) => ({\n    month: `Month ${i + 1}`,\n    workCompleted: Math.floor(Math.random() * 50) + 20,\n    fundsUtilized: Math.floor(Math.random() * 30) + 60,\n    workers: Math.floor(Math.random() * 1000) + 800,\n  }));\n\n  const categoryData = [\n    { name: \"Road Construction\", value: 35, color: \"hsl(var(--chart-1))\" },\n    { name: \"Water Conservation\", value: 25, color: \"hsl(var(--chart-2))\" },\n    { name: \"Agriculture\", value: 20, color: \"hsl(var(--chart-3))\" },\n    { name: \"Infrastructure\", value: 15, color: \"hsl(var(--chart-4))\" },\n    { name: \"Others\", value: 5, color: \"hsl(var(--chart-5))\" },\n  ];\n\n  return {\n    id: districtId,\n    name: district.name,\n    metrics: baseMetrics,\n    monthlyData,\n    categoryData,\n    targetVsAchievement: {\n      target: 100,\n      achievement: baseMetrics.workCompletionRate,\n    },\n  };\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 365, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/deshm/Downloads/mgnrega-district-dashboard-main/mgnrega-district-dashboard-main/src/app/api/mgnrega/route.ts"],"sourcesContent":["import { NextResponse } from \"next/server\";\nimport { generateMockDistrictData, districts } from \"@/lib/mgnrega-data\";\n\n// Simple in-memory cache\nconst cache = new Map<string, { data: any; timestamp: number }>();\nconst CACHE_DURATION = 5 * 60 * 1000; // 5 minutes\n\nconst monthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\nexport async function GET(request: Request) {\n  try {\n    const { searchParams } = new URL(request.url);\n    const districtId = searchParams.get(\"district\");\n\n    if (!districtId) {\n      return NextResponse.json(\n        { error: \"District ID is required\" },\n        { status: 400 }\n      );\n    }\n\n    // Check cache\n    const cached = cache.get(districtId);\n    const now = Date.now();\n\n    if (cached && now - cached.timestamp < CACHE_DURATION) {\n      return NextResponse.json({\n        data: cached.data,\n        cached: true,\n        timestamp: cached.timestamp,\n        source: \"cache\"\n      });\n    }\n\n    // Try to fetch from database API first\n    try {\n      const baseUrl = process.env.NEXT_PUBLIC_BASE_URL || 'http://localhost:3000';\n      const response = await fetch(`${baseUrl}/api/mgnrega-data?district=${districtId}`, {\n        cache: 'no-store',\n        signal: AbortSignal.timeout(5000) // 5 second timeout\n      });\n\n      if (response.ok) {\n        const dbData = await response.json();\n\n        // Transform database response to match frontend DistrictData interface\n        const transformedData = {\n          id: dbData.district.districtCode,\n          name: {\n            en: dbData.district.districtNameEn,\n            hi: dbData.district.districtNameHi,\n          },\n          metrics: {\n            workCompleted: dbData.performance?.workCompleted || 0,\n            fundsUtilized: dbData.performance?.fundsUtilizedPercentage || 0,\n            activeWorkers: dbData.performance?.activeWorkers || 0,\n            averageWage: dbData.performance?.averageWage || 0,\n            workCompletionRate: dbData.performance?.workCompletionRate || 0,\n            fundUtilizationRate: dbData.performance?.fundUtilizationRate || 0,\n            workerParticipation: dbData.performance?.workerParticipationRate || 0,\n          },\n          monthlyData: dbData.monthlyTrends.reverse().map((trend: any) => ({\n            month: monthNames[trend.month - 1],\n            workCompleted: trend.workCompleted,\n            fundsUtilized: trend.fundsUtilized,\n            workers: trend.activeWorkers,\n          })),\n          categoryData: dbData.categoryBreakdown.map((cat: any, index: number) => ({\n            name: cat.categoryName,\n            value: cat.percentage,\n            color: `hsl(var(--chart-${(index % 5) + 1}))`,\n          })),\n          targetVsAchievement: {\n            target: dbData.performance?.targetWorks || 100,\n            achievement: dbData.performance?.achievementWorks || 0,\n          },\n        };\n\n        // Update cache\n        cache.set(districtId, { data: transformedData, timestamp: now });\n\n        return NextResponse.json({\n          data: transformedData,\n          cached: false,\n          timestamp: now,\n          source: \"database\"\n        });\n      }\n    } catch (dbError) {\n      console.log(\"Database API not available, using mock data:\", dbError);\n    }\n\n    // Fallback: Check if district exists in hardcoded list for mock data\n    const district = districts.find(d => d.id === districtId);\n    if (district) {\n      console.log(`Generating mock data for district: ${district.name.en} (${districtId})`);\n      const mockData = generateMockDistrictData(districtId);\n\n      // Update cache with mock data\n      cache.set(districtId, { data: mockData, timestamp: now });\n\n      return NextResponse.json({\n        data: mockData,\n        cached: false,\n        timestamp: now,\n        source: \"mock\",\n        message: \"Using simulated data. Database integration pending.\"\n      });\n    }\n\n    // District not found in database or mock data\n    return NextResponse.json(\n      { error: \"District data not available\", districtId },\n      { status: 404 }\n    );\n\n  } catch (error) {\n    console.error(\"MGNREGA API Error:\", error);\n    return NextResponse.json(\n      {\n        error: \"Failed to fetch district data\",\n        message: error instanceof Error ? error.message : \"Unknown error\",\n      },\n      { status: 500 }\n    );\n  }\n}"],"names":[],"mappings":"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","debugId":null}}]
}